#!/bin/bash
. ./config

require_root

pushd ${SRCROOT}

commit="$(git status | grep "(working directory clean)")"
if [ "x$commit" = "x" ] && [ "x$1" != "xdirty" ]
then
	print_error "Git repository is dirty, please fix"
	popd
	exit 1
fi

[ -d fyodor.bak ] || mkdir -p fyodor.bak

dt="`date +'%y.%m.%d.%H.%M.%S.%N'`"
archive="home_${USERNAME}.bak.$dt.tar.gz"

pushd fyodor
for dir in ${KEEPDIRS}
do
	if [ -d "$dir" ]
	then
		print_error "$dir exists in fyodor, but it is something kept \
over from old"
		print_error "Please see the config file to fix this"
		popd
		popd
		exit 1
	fi
done

print_note "Using config file to update msmtprc and offlineimaprc"
sed -i "s/EMAILNAME/${EMAILNAME}/g" .msmtprc
sed -i "s/EMAILPASS/${EMAILPASS}/g" .msmtprc

sed -i "s/EMAILNAME/${EMAILNAME}/g" .offlineimaprc
sed -i "s/EMAILPASS/${EMAILPASS}/g" .offlineimaprc

if [ ! -z "${COPYFILES}" ]
then
	print_note "Copying over files from COPYFILES"
	for file in "${COPYFILES}"
	do
		if [ -f "~/$file" ]
		then
			cp -v "~/$file" ./
		fi
	done
fi

popd

print_note "The date is currently: $dt"

print_message "Tar'ing up /home/${USERNAME} for safe keeping"
[ -d fyodor.bak ] || mkdir -p fyodor.bak
sudo tar -cf "fyodor.bak/$archive" /home/${USERNAME}
if [ ! -f fyodor.bak/$archive ]
then
	print_error "Backup failed, exiting"
	popd
	exit 1
fi

mkdir -p fyodor_tmp
for dir in ${KEEPDIRS}
do
	print_note "Moving $dir to a temporary safe location"
	mv /home/${USERNAME}/$dir fyodor_tmp
done

print_message "Removing everyithng that was in /home/${USERNAME}"
sudo rm -R /home/${USERNAME}/

print_message "Pushing fyodor to /home"
sudo cp -R fyodor /home
for dir in ${KEEPDIRS}
do
	print_note "Moving $dir back into place"
	mv fyodor_tmp/$dir /home/${USERNAME}
done
rmdir fyodor_tmp


print_message "Changing the ownership on /home/${USERNAME} so \
${USERNAME} can read/write them"
sudo chown -R ${USERNAME}:users /home/${USERNAME}

print_note "New version installed!"

pushd fyodor
print_note "Reverting changes to msmtprc and offlineimaprc"
sed -i "s/${EMAILNAME}/EMAILNAME/g" .msmtprc
sed -i "s/${EMAILPASS}/EMAILPASS/g" .msmtprc

sed -i "s/${EMAILNAME}/EMAILNAME/g" .offlineimaprc
sed -i "s/${EMAILPASS}/EMAILPASS/g" .offlineimaprc

if [ ! -z "${COPYFILES}" ]
then
	print_note "Deleting files from COPYFILES"
	for file in "${COPYFILES}"
	do
		if [ -f "$file" ]
		then
			rm -v "$file"
		fi
	done
fi

popd

popd
